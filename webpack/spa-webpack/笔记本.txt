===============开发阶段===============
1.开启多核压缩
2.监控你的面板 speed-measure-webpack-plugin
3.开启通知面板
4.开启打包进度
5.开发面板更清晰
6.开启窗口的标题
7.窗口打印更直接（可选）
===============上线阶段===============
1.es6不需要编译
set map es9
https://cdn.polyfill.io/v2/polyfill.min.js?features=Map,Set,Array.prototype.map 根据浏览器生成代码，对于不支持的浏览器生成代码，比如Map,Array.prototype.map
2.前端缓存负载，比如 localstore,websql,indexdb

a-js -> a.xxx.js
a.xxx.js ->代码 后台每次计算出当前包再更新代码
3.真在的loading
4.单页 问题 多页转单页  同构js webapp性能直出 请求的数量 runtime
5.分析打包结果 CI
http://webpack.github.io/analyse
https://alexkuz.github.io/webpack-chart/
6.test exculde include node_modules排除掉非常重要很快
7.压缩JS css happypack ts-loader 当打包的时间超过1分钟开启多核会比较快反之则慢 optimize-css-assets-webpack-plugin
8.devtool eval比较快
9.cache-loader缓存loader